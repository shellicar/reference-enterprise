extend type Query {
  widget: WidgetQueries!
}

extend type Mutation {
  widget: WidgetMutations!
}

type WidgetQueries {
  get(input: WidgetGetInput!): Widget
  search(input: WidgetSearchInput!): WidgetFeed!
}

type WidgetMutations {
  delete(input: WidgetDeleteInput!): WidgetDeletePayload!
}

type Widget {
  id: UUID!
  name: String!
  description: String
  created: Instant!
  modified: Instant!
  deleted: Instant
}

input WidgetGetInput {
  id: UUID!
}

input WidgetSearchInput {
  name: StringFilter
  description: StringFilter
  limit: Int = 10 @constraint(min: 1, max: 100)
  cursor: Cursor
}

input WidgetDeleteInput {
  name: String! @constraint(minLength: 1, maxLength: 100, pattern: "^[\\x20-\\x7E]+$")
  description: String! @constraint(minLength: 1, maxLength: 100, pattern: "^[\\x20-\\x7E]+$")
}

union WidgetDeletePayload = WidgetDeletePayloadSuccess | WidgetDeletePayloadFailure

type WidgetDeletePayloadSuccess {
  id: UUID!
}

enum WidgetDeletePayloadFailureStatus {
  INVALID_INPUT
  ALREADY_EXISTS
  INTERNAL_ERROR
}

type WidgetDeletePayloadFailure {
  status: WidgetDeletePayloadFailureStatus!
  errors: [WidgetDeletePayloadFailureError!]!
}

type WidgetDeletePayloadFailureErrorDetails implements MutationProblemDetails {
  key: String!
  value: String!
}

type WidgetDeletePayloadFailureError implements MutationProblem {
  message: String!
  details: [MutationProblemDetails!]!
}

type WidgetFeed {
  items: [Widget!]!
  cursor: Cursor
}
